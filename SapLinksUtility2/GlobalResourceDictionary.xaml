<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Define color palette based on CE brand colors -->
    <Color x:Key="PrimaryBlueColor">#FF0079C1</Color>
    <Color x:Key="SecondaryBlueColor">#FF2F97D5</Color>
    <Color x:Key="TertiaryBlueColor">#FF6AB7E4</Color>
    <Color x:Key="QuaternaryBlueColor">#FFCC5E5F</Color>
    <Color x:Key="QuinaryBlueColor">#FFDCF6FF</Color>
    <Color x:Key="PrimaryGreenColor">#FF639D36</Color>
    <Color x:Key="SecondaryGreenColor">#FF7DCA42</Color>
    <Color x:Key="TertiaryGreenColor">#FF9ED872</Color>
    <Color x:Key="QuaternaryGreenColor">#FFC7E6AF</Color>
    <Color x:Key="QuinaryGreenColor">#FFCAF1CA</Color>
    <Color x:Key="SenaryGreenColor">#FFE4FEE4</Color>
    <Color x:Key="PrimaryGrayColor">#FF929292</Color>
    <Color x:Key="SecondaryGrayColor">#FFB3B3B3</Color>
    <Color x:Key="TertiaryGrayColor">#FFCECECE</Color>
    <Color x:Key="QuaternaryGrayColor">#FFF6F6F6</Color>
    <Color x:Key="QuinaryGrayColor">#FF000000</Color>
    <Color x:Key="SenaryGrayColor">#FFE5E5E5</Color>
    <Color x:Key="SeptenaryGrayColor">#FF666666</Color>
    <Color x:Key="AlertPrimaryRedColor">#FFC32B2A</Color>
    <Color x:Key="AlertPrimaryOrangeColor">#FFFFC425</Color>
    <Color x:Key="AlertTertiaryOrangeColor">#FFFFE6AE</Color>
    <Color x:Key="AlertTertiaryYellowColor">#FFEB871B</Color>
    <!-- Define solid color brushes for a green button -->
    <SolidColorBrush x:Key="GreenButton.Static.BackgroundBrush" Color="{StaticResource PrimaryGreenColor}"/>
    <SolidColorBrush x:Key="GreenButton.Static.BorderBrush" Color="{StaticResource PrimaryGreenColor}"/>
    <SolidColorBrush x:Key="GreenButton.Static.BlueBorderBrush" Color="{StaticResource PrimaryBlueColor}"/>
    <SolidColorBrush x:Key="GreenButton.Static.ForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="GreenButton.MouseOver.BackgroundBrush" Color="{StaticResource TertiaryGreenColor}"/>
    <SolidColorBrush x:Key="GreenButton.MouseOver.BorderBrush" Color="{StaticResource PrimaryGreenColor}"/>
    <SolidColorBrush x:Key="GreenButton.MouseOver.ForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="GreenButton.Pressed.BackgroundBrush" Color="{StaticResource SecondaryGreenColor}"/>
    <SolidColorBrush x:Key="GreenButton.Pressed.BorderBrush" Color="{StaticResource PrimaryGreenColor}"/>
    <SolidColorBrush x:Key="GreenButton.Pressed.ForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="GreenButton.Disabled.BackgroundBrush" Color="{StaticResource QuaternaryGreenColor}"/>
    <SolidColorBrush x:Key="GreenButton.Disabled.BorderBrush" Color="{StaticResource QuaternaryGreenColor}"/>
    <SolidColorBrush x:Key="GreenButton.Disabled.ForegroundBrush" Color="White"/>
    <!-- Define solid color brushes for a blue button -->
    <SolidColorBrush x:Key="BlueButton.Static.BackgroundBrush" Color="{StaticResource PrimaryBlueColor}"/>
    <SolidColorBrush x:Key="BlueButton.Static.BorderBrush" Color="{StaticResource PrimaryGreenColor}"/>
    <SolidColorBrush x:Key="BlueButton.Static.ForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="BlueButton.MouseOver.BackgroundBrush" Color="{StaticResource TertiaryBlueColor}"/>
    <SolidColorBrush x:Key="BlueButton.MouseOver.BorderBrush" Color="{StaticResource PrimaryGreenColor}"/>
    <SolidColorBrush x:Key="BlueButton.MouseOver.ForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="BlueButton.Pressed.BackgroundBrush" Color="{StaticResource SecondaryBlueColor}"/>
    <SolidColorBrush x:Key="BlueButton.Pressed.BorderBrush" Color="{StaticResource PrimaryGreenColor}"/>
    <SolidColorBrush x:Key="BlueButton.Pressed.ForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="BlueButton.Disabled.BackgroundBrush" Color="{StaticResource QuaternaryBlueColor}"/>
    <SolidColorBrush x:Key="BlueButton.Disabled.BorderBrush" Color="{StaticResource QuaternaryGreenColor}"/>
    <SolidColorBrush x:Key="BlueButton.Disabled.ForegroundBrush" Color="White"/>
    <!-- Other brushes -->
    <SolidColorBrush x:Key="Window.BackgroundBrush" Color="{StaticResource QuinaryBlueColor}"/>
    <SolidColorBrush x:Key="BlackBrush" Color="Black"/>
    <SolidColorBrush x:Key="ToolsPageTitleBrush" Color="{StaticResource PrimaryBlueColor}"/>
    <SolidColorBrush x:Key="LightGreenBrush" Color="{StaticResource TertiaryGreenColor}"/>
    <SolidColorBrush x:Key="MediumGreenBrush" Color="{StaticResource PrimaryGreenColor}"/>
    <LinearGradientBrush x:Key="PanelGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource PrimaryGreenColor}" Offset="0"/>
        <GradientStop Color="#7FFFFFFF" Offset="1"/>
    </LinearGradientBrush>
    <!-- Control template for a green button -->
    <ControlTemplate x:Key="GreenButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{StaticResource GreenButton.Static.ForegroundBrush}" TextElement.FontSize="18"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource GreenButton.MouseOver.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenButton.MouseOver.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GreenButton.MouseOver.ForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource GreenButton.Pressed.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenButton.Pressed.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GreenButton.Pressed.ForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource GreenButton.Disabled.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenButton.Disabled.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GreenButton.Disabled.ForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- Control template for tool category buttons -->
    <ControlTemplate x:Key="ToolsCategoryButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{StaticResource BlueButton.Static.ForegroundBrush}" TextElement.FontSize="18">
                <ContentPresenter.Effect>
                    <DropShadowEffect/>
                </ContentPresenter.Effect>
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource BlueButton.MouseOver.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BlueButton.MouseOver.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource BlueButton.MouseOver.ForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource BlueButton.Pressed.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BlueButton.Pressed.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource BlueButton.Pressed.ForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource BlueButton.Disabled.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BlueButton.Disabled.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource BlueButton.Disabled.ForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- Control template for tool buttons -->
    <ControlTemplate x:Key="ToolButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{StaticResource BlueButton.Static.ForegroundBrush}" TextElement.FontSize="18">
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource BlueButton.MouseOver.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BlueButton.MouseOver.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource BlueButton.MouseOver.ForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource BlueButton.Pressed.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BlueButton.Pressed.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource BlueButton.Pressed.ForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource BlueButton.Disabled.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BlueButton.Disabled.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource BlueButton.Disabled.ForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- Control template for action buttons -->
    <ControlTemplate x:Key="ActionButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{StaticResource BlueButton.Static.ForegroundBrush}" TextElement.FontSize="18">
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource GreenButton.MouseOver.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenButton.MouseOver.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GreenButton.MouseOver.ForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource GreenButton.Pressed.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenButton.Pressed.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GreenButton.Pressed.ForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource GreenButton.Disabled.BackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenButton.Disabled.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource GreenButton.Disabled.ForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- Style definition for the "Tools" button -->
    <Style x:Key="ToolButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource GreenButton.Static.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GreenButton.Static.BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Width" Value="105"/>
        <Setter Property="Template" Value="{StaticResource GreenButtonTemplate}"/>
    </Style>
    <!-- Style definition for the tools category buttons -->
    <Style x:Key="CategoryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource BlueButton.Static.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlueButton.Static.BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Height" Value="105"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="Template" Value="{StaticResource ToolsCategoryButtonTemplate}"/>
    </Style>
    <!-- Style definition for the tool buttons -->
    <Style x:Key="ToolsButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource BlueButton.Static.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlueButton.Static.BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="5,0,35,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template" Value="{StaticResource ToolButtonTemplate}"/>
    </Style>
    <!-- Style definition for the action buttons -->
    <Style x:Key="ActionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource GreenButton.Static.BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GreenButton.Static.BlueBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Margin" Value="5,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template" Value="{StaticResource ActionButtonTemplate}"/>
    </Style>
    <!-- Control template for the main window -->
    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="windowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="windowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- Style definition for the main window -->
    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource Window.BackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Style definition for the text on the tools category buttons -->
    <Style x:Key="CategoryTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <!-- Style definition for the title text on the tool pages -->
    <Style x:Key="ToolTitleTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI Black"/>
        <Setter Property="Padding" Value="15,20"/>
        <Setter Property="Margin" Value="5,0,35,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource ToolsPageTitleBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black"/>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style definition for the text on the tool buttons -->
    <Style x:Key="ToolButtonTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
</ResourceDictionary>